apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "metashift" //note: includes spring-boot plugin


version = "0.0.2-SNAPSHOT"
sourceCompatibility = 1.8
targetCompatibility = 1.8


def getMavenSettingsCredentials = {
    String userHome = System.getProperty( "user.home" );
    File mavenSettings = new File(userHome, ".m2/settings.xml")
    def xmlSlurper = new XmlSlurper()
    def output = xmlSlurper.parse(mavenSettings)
    return output."servers"."server"
}

def getCredentials = {
    def entries = getMavenSettingsCredentials()
    def miCloudRepoTag = "mindsignited-repo"
    if (version.contains("SNAPSHOT")){
        miCloudRepoTag = "mindsignited-repo-snapshot"
    }
    for (entry in entries) {
        if ( entry."id".text() == miCloudRepoTag ) {
            return [username: entry.username.text(), password: entry.password.text()]
        }
    }

}

buildscript {
    repositories {
        jcenter()
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("build/classes/main/")
    }
}

jar {
    baseName = "metashift-cli"
}

def creds = getCredentials()
def isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    jcenter()
    mavenLocal()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    flatDir {
        dirs "lib" // Here for crash deps temporarily
    }
    if (isReleaseVersion) {
        maven {
            authentication { basic(BasicAuthentication) }
            credentials {
                username creds["username"]
                password creds["password"]
            }
            url "https://deployer.mthinxiot.com/mindsignited/maven-repo/raw/releases"
        }
    }else{
        maven {
            authentication { basic(BasicAuthentication) }
            credentials {
                username creds["username"]
                password creds["password"]
            }
            url "https://deployer.mthinxiot.com/mindsignited/maven-repo/raw/snapshots"
        }
    }
    maven { url "https://raw.github.com/synergian/wagon-git/releases"}
}


configurations {
    compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
    runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
    compile.exclude group: "org.slf4j", module: "slf4j-simple"
    runtime.exclude group: "org.slf4j", module: "slf4j-simple"
}

mainClassName = "com.metashift.MetashiftApplication"


dependencies {

    ext {
        springBootVersion = '1.2.3.RELEASE'
        springVersion = '4.1.6.RELEASE'
        bouncyCastleVersion = '1.54'
        apacheSSHDVersion = '0.11.0'
        apacheMinaVersion = '2.0.7'
        awsResourcesVersion = '0.0.3'
        awsSDKVersion = '1.11.7'
        rythmVersion = '1.0.1'
        freeMarkerVersion = '2.3.22'
        grgitVersion = '1.4.1'
        logbackVersion = '1.1.3'
        chronicleVersion='4.5.18'
        chronicleWireVersion='1.7.14'
    }

    compile "org.codehaus.groovy:groovy-all:2.4.4"
    compile "org.apache.ivy:ivy:2.4.0"

// Genesys DSL
    compile 'com.mindsignited:genesys-dsl:1.0-SNAPSHOT'

    compile "commons-logging:commons-logging:1.2"

    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-context-support:${springVersion}"

    compile "org.springframework:spring-tx:${springVersion}"
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"

    compile "commons-io:commons-io:2.4"

    /** Spring Deps **/

    compile group: "javax.inject", name: "javax.inject", version: "1"
    compile "javax.cache:cache-api:1.0.0"
    compile "org.hibernate:hibernate-validator"
    compile "javax.el:javax.el-api:2.2.4"
    compile "org.glassfish.web:javax.el:2.2.4"

    /** Boot CLI Deps **/

    compile "org.springframework.boot:spring-boot-loader:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-dependency-tools:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-loader-tools:${springBootVersion}"

    compile "jline:jline:2.12.1"
    compile "net.sf.jopt-simple:jopt-simple:4.8"

    compile "org.json:json:20141113"

    compile "org.apache.httpcomponents:httpclient:4.5"

    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"

    compile "junit:junit"

    /** End Boot CLI Deps **/

    compile "org.crashub:crash.shell:1.3.1-SNAPSHOT"
    compile "org.crashub:crash.cli:1.3.1-SNAPSHOT"

    /** SSH Deps **/

    compile "org.apache.sshd:sshd-core:${apacheSSHDVersion}"
    compile "org.apache.sshd:sshd-pam:${apacheSSHDVersion}"
    compile "org.bouncycastle:bcprov-jdk15on:${bouncyCastleVersion}"
    compile "org.bouncycastle:bcpkix-jdk15on:${bouncyCastleVersion}"
    compile "org.apache.mina:mina-core:${apacheMinaVersion}"

    /** End SSH Deps **/


    /** AWS Deps **/

    compile "com.amazonaws.resources:aws-resources:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-core:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-ec2:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-glacier:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-iam:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-sns:${awsResourcesVersion}"
    compile "com.amazonaws.resources:aws-resources-sqs:${awsResourcesVersion}"

    compile("com.amazonaws:aws-java-sdk:${awsSDKVersion}"){
        exclude group: "org.springframework"
        exclude group: "com.fasterxml.jackson.core"
    }
    compile("com.amazonaws:aws-java-sdk-core:${awsSDKVersion}"){
        exclude group: "com.fasterxml.jackson.core"
    }
    compile("com.amazonaws:aws-java-sdk-rds:${awsSDKVersion}"){
        exclude group: "com.fasterxml.jackson.core"
    }

    /** End AWS Deps **/

    compile "org.mindrot:jbcrypt:0.3m"

    compile "asm:asm-all:3.3.1"
    compile "org.xeustechnologies:jcl-core:2.6"
    compile "io.reactivex:rxjava:1.0.7"

    compile "io.fastjson:boon:0.32"


    /** Spawn Specfific Deps **/

    compile "org.rythmengine:rythm-engine:${rythmVersion}"
    compile "org.freemarker:freemarker:${freeMarkerVersion}"

    compile "org.ajoberstar:grgit:${grgitVersion}"


    /** Misc Deps **/

    //Chronicle Queue
    compile "net.openhft:chronicle-queue:${chronicleVersion}"
    compile "net.openhft:chronicle-wire:${chronicleWireVersion}"

    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"

    // Flint migration dependencies
    compile group: 'mthinxiot', name: 'FlintDomainServer', version:'1.0.18-SNAPSHOT'
    compile group: 'mthinxiot', name: 'FlintRepository', version:'1.0.18-SNAPSHOT'

    compile group: 'org.springframework.data', name: 'spring-data-jpa', version:'1.6.4.RELEASE'
    compile group: 'c3p0', name: 'c3p0', version:'0.9.1.2'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.23'
    compile group: 'org.hibernate', name: 'hibernate-core', version:'3.6.10.Final'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version:'3.6.10.Final'
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version:'3.6.10.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version:'1.0.1.Final'
    compile group: 'javax.validation', name: 'validation-api', version:'1.0.0.GA'
    compile group: 'org.hibernate', name: 'hibernate-validator', version:'4.3.1.Final'
    compile group: 'org.springframework', name: 'spring-context', version:"${springVersion}"
    compile group: 'org.springframework', name: 'spring-orm', version:"${springVersion}"
    compile group: 'org.springframework', name: 'spring-jdbc', version:"${springVersion}"
    

    testCompile "org.springframework.boot:spring-boot-starter-test"
}


task wrapper(type: Wrapper) {
    gradleVersion = "2.3"
}


applicationDefaultJvmArgs = [
        "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5015",
        "-Dspring.profiles.active=development,crash",
        "-Dgroovy.grape.report.downloads=true",
        "-noverify"
]
